<!-- The create model Modal -->
<div class="modal" id="modelCreate">
  <div class="modal-dialog">
    <div class="modal-content">

      <div class="modal-header">
        <h4 class="modal-title">CREATE:</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>

      <div class="modal-body">
        <form id="submit-model-form">
          <div class="form-group">
            <label for="select_brand">Select Brand</label>
            <select name="select_brand" id="select_brand" class="form-control" required></select>
          </div>
          <div class="form-group">
            <label for="create-model-title">Title:</label>
            <input type="text" class="form-control" name="create-model-title" id="create-model-title" required />
          </div>
          <button class="btn btn-success">CREATE</button>
        </form>
      </div>

      <div class="modal-footer" id="create-model-error"></div>

    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function() {

    // load brand when modal opens
    $('#modelCreate').on('show.bs.modal', function (e) {
      loadBrandsForModel();
    });

    $('#submit-model-form').submit(async function(e) {
      e.preventDefault();

      let brand = $(this).find("#select_brand").val();
      let title = $(this).find("#create-model-title").val();

      let result = await fetch(`${ ADDRESS }model/create`, {
        method: "POST", 
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
        body: JSON.stringify({ 
          "brand": brand,
          "title": title
        })
      })
      .then(result => result.json())
      .then(result => { return result; });

      if(result.errors !== undefined && result.errors != null && result.errors.length > 0){
        let show_errors = result.errors.map((err) => { return `<p class="alert alert-danger">${err}</p>`; });
        $("#create-model-error").html(show_errors);
      }
      if(result.success !== undefined && result.success != null && result.success !== "") {
        $('#submit-model-form input').val(null);
        $("#create-model-error").html();
        alert(result.success);
        location.reload();
      }
    });

  });

  /* load brands */
  async function loadBrandsForModel() {
    let result = await fetch(`${ ADDRESS }brand/get`, {
      method: "GET", 
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      }
    })
    .then(result => result.json())
    .then(result => { return result; }); 

    if(result.brands.length > 0){
      let list = result.brands.map((b) => {
        return `<option value="${b.id}">${b.title}</option>`;
      });

      $("#select_brand").html(list);
    }
  }
</script>